name: "Build Verified"
description: "Builds a Solana program using solana-verify"
inputs:
  devnet:
    description: "Whether to use devnet feature"
    required: false
    default: "false"
  testing:
    description: "Whether to use devnet feature"
    required: false
    default: "false"
  program:
    description: "The program to build and upload"
    required: true
  program-id:
    description: "The program id of the program we are uploading"
    required: true

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup/
    - uses: ./.github/actions/setup-anchor/
      with:
        node-version: ${{ env.NODE_VERSION }}
    - uses: actions/cache@v2
      name: Cache Cargo registry + index
      id: cache-cargo-registry
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-${{ runner.os }}-v0001-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions/cache@v2
      name: Cache Solana Verify
      id: cache-solana-verify
      with:
        path: |
          ~/.cargo/bin/solana-verify
        key: cargo-${{ runner.os }}-solana-verify
    - name: cargo install solana-verify --locked
      if: steps.cache-solana-verify.outputs.cache-hit != 'true'
      shell: bash
      run: cargo install solana-verify
    - name: Build Verified
      shell: bash
      run: |
        FEATURES=""
        if [ "${{ inputs.devnet }}" = "true" ]; then
          FEATURES="--features devnet"
        fi
        ~/.cargo/bin/solana-verify build --library-name ${{ inputs.program }} -- $FEATURES
