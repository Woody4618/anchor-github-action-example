name: "Deploy Program"
description: "Deploy program to Solana network"
inputs:
  program:
    description: "Program name"
    required: true
  program-id:
    description: "Program ID"
    required: true
  network:
    description: "Target network (devnet/mainnet)"
    required: true
    default: "devnet"
  keypair:
    description: "Base58 encoded keypair for deployment (optional)"
    required: false
  skip-build:
    description: "Skip building the program"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup/
    - uses: ./.github/actions/setup-solana/
    
    - name: Build Program
      if: inputs.skip-build != 'true'
      uses: ./.github/actions/build-anchor/
      with:
        program: ${{ inputs.program }}
        devnet: ${{ inputs.network == 'devnet' }}

    - name: Setup Network and Deploy
      shell: bash
      run: |
        # Setup network
        if [ "${{ inputs.network }}" = "mainnet" ]; then
          solana config set --url https://api.mainnet-beta.solana.com
        else
          solana config set --url "https://api.devnet.solana.com"
        fi

        # Setup keypair
        if [ ! -z "${{ inputs.keypair }}" ]; then
          echo "Using provided keypair"
          echo "${{ inputs.keypair }}" > keypair.json
        elif [ "${{ inputs.network }}" = "mainnet" ]; then
          echo "Using mainnet deployer keypair"
          echo "$MAINNET_DEPLOYER_KEYPAIR" > keypair.json
        else
          echo "Using devnet deployer keypair"
          echo "$DEVNET_DEPLOYER_KEYPAIR" > keypair.json
        fi
        solana config set --keypair keypair.json

        # Deploy program
        if ! solana program show ${{ inputs.program-id }} --url ${{ inputs.network == 'mainnet' && 'https://api.mainnet-beta.solana.com' || 'https://api.devnet.solana.com' }}; then
          echo "Program not found, using PROGRAM_ADDRESS_KEYPAIR for initial deployment"
          echo "$PROGRAM_ADDRESS_KEYPAIR" > program-keypair.json
          solana program deploy \
            --program-id program-keypair.json \
            target/deploy/${{ inputs.program }}.so --with-compute-unit-price 10000 --max-sign-attempts 1000 --use-rpc
        else
          echo "Program exists, upgrading program ${{ inputs.program-id }}"
          solana program write-buffer target/deploy/${{ inputs.program }}.so \
            --with-compute-unit-price 10000 --max-sign-attempts 1000 --use-rpc
          BUFFER=$(solana program show --buffers | grep Buffer | cut -d ' ' -f1 | tail -n1)
          solana program set-buffer-authority --new-buffer-authority $(solana address) $BUFFER
          solana program upgrade \
            target/deploy/${{ inputs.program }}.so \
            --program-id ${{ inputs.program-id }} \
            --with-compute-unit-price 10000 --max-sign-attempts 1000 --use-rpc
        fi 