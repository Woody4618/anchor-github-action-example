name: "Program Upgrade"
description: "Upgrades or deploys a Solana program"
inputs:
  program-id:
    description: "Program ID to upgrade"
    required: true
  program:
    description: "Program name"
    required: true
  buffer:
    description: "Buffer address"
    required: true
  rpc-url:
    description: "Solana RPC URL"
    required: true
  keypair:
    description: "Deployer keypair"
    required: true

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup/
    - uses: ./.github/actions/setup-solana/
    
    - name: Write keypair
      shell: bash
      run: echo "$DEPLOY_KEYPAIR" > ./deploy-keypair.json && chmod 600 ./deploy-keypair.json
      env:
        DEPLOY_KEYPAIR: ${{ inputs.keypair }}

    - name: Check if program exists
      id: check-program
      shell: bash
      run: |
        if solana program show ${{ inputs.program-id }} --url ${{ inputs.rpc-url }}; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Deploy new program
      if: steps.check-program.outputs.exists == 'false'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: |
          solana program deploy \
            --url ${{ inputs.rpc-url }} \
            --keypair ./deploy-keypair.json \
            --program-id ./target/deploy/${{ inputs.program }}-keypair.json \
            --max-sign-attempts 50 \
            --with-compute-unit-price 100000 \
            --use-rpc \
            ./target/deploy/${{ inputs.program }}.so

    - name: Upgrade existing program
      if: steps.check-program.outputs.exists == 'true'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: |
          # Get current and new program sizes
          CURRENT_SIZE=$(solana program show $PROGRAM_ID -u $RPC_URL | grep "Data Length:" | cut -d ":" -f2 | cut -d " " -f2)
          NEW_SIZE=$(wc -c < ./target/deploy/$PROGRAM.so)
          echo "Current program size: $CURRENT_SIZE bytes"
          echo "New program size: $NEW_SIZE bytes"
          
          # Extend program if needed
          if [ $NEW_SIZE -gt $CURRENT_SIZE ]; then
            echo "Program needs to be extended"
            solana program extend $PROGRAM_ID $((NEW_SIZE - CURRENT_SIZE)) -u $RPC_URL -k ./deploy-keypair.json 
            echo "Program extended successfully"
          fi
          
          # Upgrade program
          solana program upgrade $BUFFER $PROGRAM_ID -k ./deploy-keypair.json -u $RPC_URL 

      env:
        BUFFER: ${{ inputs.buffer }}
        PROGRAM_ID: ${{ inputs.program-id }}
        PROGRAM: ${{ inputs.program }}
        RPC_URL: ${{ inputs.rpc-url }}

    - name: Cleanup
      if: always()
      shell: bash
      run: rm -f ./deploy-keypair.json 