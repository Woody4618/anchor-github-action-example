name: "Write IDL Buffer"
description: "Creates a buffer for the program IDL"
inputs:
  program-id:
    description: "Program ID"
    required: true
  program:
    description: "Program name"
    required: true
  rpc-url:
    description: "Solana RPC URL"
    required: true
  keypair:
    description: "The keypair to use for buffer creation"
    required: true
  idl-authority:
    description: "The address of the idl buffer authority"
    required: true

outputs:
  buffer:
    description: "Created IDL buffer address"
    value: ${{ steps.write-buffer.outputs.buffer }}

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup/
    - uses: ./.github/actions/setup-anchor/

    - name: Write keypair
      shell: bash
      run: echo "$DEPLOY_KEYPAIR" > ./deploy-keypair.json && chmod 600 ./deploy-keypair.json
      env:
        DEPLOY_KEYPAIR: ${{ inputs.keypair }}

    - name: Check if IDL exists
      id: check-idl
      shell: bash
      run: |
        if anchor idl fetch ${{ inputs.program-id }} --provider.cluster ${{ inputs.rpc-url }} > /dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Write IDL buffer
      id: write-buffer
      if: steps.check-idl.outputs.exists == 'true'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        shell: bash
        command: |
          # Write buffer with retries for RPC issues
          for i in {1..5}; do
            echo "Attempt $i to write IDL buffer..."
            sleep $((i * 2))  # Exponential backoff

            # Write buffer
            anchor idl write-buffer ${{ inputs.program-id }} \
              --filepath ./target/idl/${{ inputs.program }}.json \
              --provider.cluster ${{ inputs.rpc-url }} \
              --provider.wallet ./deploy-keypair.json > buffer.out

            # Extract buffer address
            BUFFER=$(cat buffer.out | grep -o 'Idl buffer created: [^ ]*' | cut -d' ' -f4)
            
            if [ ! -z "$BUFFER" ]; then
              echo "Found buffer: $BUFFER"
              echo "Current Authority: $(solana address -k ./deploy-keypair.json)"
              echo "New Authority: ${{ inputs.idl-authority }}"

              anchor idl set-authority $BUFFER \
                --program-id ${{ inputs.program-id }} \
                --new-authority ${{ inputs.idl-authority }} \
                --provider.cluster ${{ inputs.rpc-url }} \
                --provider.wallet ./deploy-keypair.json && break

              # Set program idl authority
              anchor idl set-authority \
                --program-id ${{ inputs.program-id }} \
                --new-authority ${{ inputs.idl-authority }} \
                --provider.cluster ${{ inputs.rpc-url }} \
                --provider.wallet ./deploy-keypair.json && break
            fi
          done

          echo "buffer=$BUFFER" >> $GITHUB_OUTPUT

    - name: Cleanup
      if: always()
      shell: bash
      run: rm -f ./deploy-keypair.json
